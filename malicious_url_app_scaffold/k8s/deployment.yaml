apiVersion: apps/v1
kind: Deployment
metadata:
	name: backend
	namespace: malicious-url-detector
spec:
	replicas: 2
	selector:
		matchLabels:
			app: backend
	template:
		metadata:
			labels:
				app: backend
		spec:
			containers:
				- name: backend
					image: backend:latest
					ports:
						- containerPort: 8000
					env:
						- name: DATABASE_URL
							valueFrom:
								secretKeyRef:
									name: postgres-secret
									key: DATABASE_URL
						- name: REDIS_URL
							valueFrom:
								secretKeyRef:
									name: redis-secret
									key: REDIS_URL
						- name: SECRET_KEY
							valueFrom:
								secretKeyRef:
									name: django-secret
									key: SECRET_KEY
						- name: DEBUG
							value: "0"
---
apiVersion: apps/v1
kind: Deployment
metadata:
	name: frontend
	namespace: malicious-url-detector
spec:
	replicas: 2
	selector:
		matchLabels:
			app: frontend
	template:
		metadata:
			labels:
				app: frontend
		spec:
			containers:
				- name: frontend
					image: frontend:latest
					ports:
						- containerPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
	name: redis
	namespace: malicious-url-detector
spec:
	replicas: 1
	selector:
		matchLabels:
			app: redis
	template:
		metadata:
			labels:
				app: redis
		spec:
			containers:
				- name: redis
					image: redis:alpine
					ports:
						- containerPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
	name: postgres
	namespace: malicious-url-detector
spec:
	replicas: 1
	selector:
		matchLabels:
			app: postgres
	template:
		metadata:
			labels:
				app: postgres
		spec:
			containers:
				- name: postgres
					image: postgres:14
					ports:
						- containerPort: 5432
					env:
						- name: POSTGRES_DB
							value: malicious_url_db
						- name: POSTGRES_USER
							value: user
						- name: POSTGRES_PASSWORD
							valueFrom:
								secretKeyRef:
									name: postgres-secret
									key: POSTGRES_PASSWORD
					volumeMounts:
						- name: postgres-pv
							mountPath: /var/lib/postgresql/data
			volumes:
				- name: postgres-pv
					persistentVolumeClaim:
						claimName: postgres-pvc