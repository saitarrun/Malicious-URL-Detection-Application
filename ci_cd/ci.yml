name: CI/CD Pipeline
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  lint-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          cd malicious_url_app_scaffold/backend
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
          pip install flake8
      - name: Lint
        run: |
          cd malicious_url_app_scaffold/backend
          source .venv/bin/activate
          flake8 src/
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          cd malicious_url_app_scaffold/backend
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
          pip install pytest
      - name: Test
        run: |
          cd malicious_url_app_scaffold/backend
          source .venv/bin/activate
          pytest src/api_v1/
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: |
          cd malicious_url_app_scaffold/frontend
          npm install
      - name: Test
        run: |
          cd malicious_url_app_scaffold/frontend
          npm run test
  build-and-push:
    runs-on: ubuntu-latest
    needs: [lint-backend, test-backend, test-frontend]
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker images
        run: |
          docker-compose build
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push Docker images
        run: |
          docker-compose push
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v3
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f malicious_url_app_scaffold/k8s/
